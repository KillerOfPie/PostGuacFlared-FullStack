---
version: "3.8"
name: "post-guac-flared"

x-backnet: &backnet
  networks:
    - avocado-farm

x-frontnet: &frontnet
  networks:
    - farm-break

x-base: &base
  restart: ${RESTART:-${PROD:-unless-stopped}} # If RESTART is set & not empty, use it; else if PROD is set, use 'always'; else use 'unless-stopped';

services:
  postguac:
    <<: [*base, *backnet]
    container_name: postguac
    image: rapidfort/postgresql:latest
    volumes:
      - postgres-db:/bitnami/postgresql
    environment:
      - "POSTGRES_DATABASE=$${DATABASE.NAME:-guacamole}"
      - "POSTGRES_USER=$${DATABASE.USER:-getguaced}"
      - "POSTGRESQL_PASSWORD=$${DATABASE.PASSWORD:-herecomestheguac}"
      - "POSTGRESQL_PASSWORD_FILE=$${DATABASE.PASSWORD_FILE}"

  guacozy:
    <<: [*base, *frontnet, *backnet] #
    container_name: guacozy
    image: guacozy/guacozy-server:latest
    environment:
      - "DJANGO_SECRET_KEY=${GUACOZY.DJANGO.SECRET_KEY:?Django Secret Key is required}"
      - "FIELD_ENCRYPTION_KEY=${GUACOZY.DJANGO.FIELD_ENCRYPTION_KEY:?Django Field Encryption Key is required}"
      - "DJANGO_DB_URL=postgres://${GUACOZY.DJANGO.DATABASE_HOST:?Django Postgres Database Host is required}:${GUACOZY.DJANGO.DATABASE_PORT:?Django Postgres Database Port is required}"
      - "DJANGO_ALLOWED_HOSTS=${GUACOZY.DJANGO.DJANGO_ALLOWED_HOSTS:-*}"
    expose:
      - "${GUAC.EXPOSED_PORT.HTTP:10080:80}"
      - "${GUAC.EXPOSED_PORT.HTTPS:10443:443}"
    configs:
      - source: guac_conf
        target: "${GUAC.GUACAMOLE_HOME}/guacamole.properties"
        mode: 0440
      - source: guac_logback_config
        target: "${GUAC.GUACAMOLE_HOME}/logback.xml"
        mode: 0440
    depends_on:
      - postguac

  guac-d:
    <<: [*base]
    container_name: guac-d
    image: guacamole/guacd:latest
    network_mode: "service:guacozy"
    privileged: true
    configs:
      - source: guac_d_conf
        target: "/etc/guacamole/guacd.conf"
        mode: 0440

  guac-flared:
    <<: [*base, *frontnet, *backnet] #
    container_name: guac-flared
    image: cloudflare/cloudflared:latest
    #   command: "docker run cloudflare/cloudflared:latest tunnel --no-autoupdate run --token ${CLOUDFLARED.TUNNEL_TOKEN}"
    environment:
      - "TUNNEL_TOKEN=${CLOUDFLARED.TUNNEL_TOKEN}"
    volumes:
      - cloudflared-vol:/etc/cloudflared

networks:
  farm-break:
    external: true
    name: "${NETWORK.EXTERNAL_NAME}"
  avocado-farm:
    external: true
    name: "${NETWORK.INTERNAL_NAME}"

volumes:
  postgres-db:
    name: "${DATABASE.VOLUME_NAME}"
    external: true
  cloudflared-vol:
    name: "${CLOUDFLARED.VOLUME_NAME}"
    external: true

configs:
  guac_d_conf:
    name: guac_d_conf
    content: |
      [daemon]
      pid_file = /var/run/guacd.pid
      log_level = $${GUAC_D.LOG_LEVEL:-info}
      [server]
      bind_host = $${GUAC_D.BIND_HOST:-localhost}
      bind_port = $${GUAC_D.BIND_PORT:-4822}
      [ssl]
      server_certificate = $${GUAC_D.SERVER_CERT_LOCATION}
      server_key = $${GUAC_D.SERVER_KEY_LOCATION}

  guac_logback_config:
    name: guac_logback_config
    content: |
      <configuration>
          <!-- Appender for debugging -->
          <appender name="GUAC-DEBUG" class="ch.qos.logback.core.ConsoleAppender">
              <encoder>
                  <pattern>"$${GUAC.LOGBACK.PATTERN:-\"%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n\"}"</pattern>
              </encoder>
          </appender>
          <!-- Log at DEBUG level -->
          <root level="$${GUAC.LOGBACK.LOG_LEVEL:-info}">
              <appender-ref ref="GUAC-DEBUG"/>
          </root>
      </configuration>

  guac_conf:
    name: guac_conf
    content: |
      api-session-timeout: $${GUAC.API_SESSION_TIMEOUT:-60}
      available-languages: $${GUAC.AVAILABLE_LANGUAGES:-"en, de, es"}
      enable-environment-properties: $${GUAC.ENABLE_ENV_PROPERTIES:-true}
      guacd-hostname: $${GUAC.GUAC_D.CONN_HOST:-$${GUAC_D.BIND_HOST:-localhost}}
      guacd-port: $${GUAC.GUAC_D.BIND_PORT:-$${GUAC_D.BIND_PORT:-4822}}
      guacd-ssl: $${GUAC.GUAC_D.USE_SSL:-$${GUAC_D.BIND_USE_SSL:-false}}
